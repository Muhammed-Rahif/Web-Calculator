{"version":3,"sources":["components/Main.tsx","pages/Home.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["Main","useState","moment","format","time","setTime","operation","setOperation","result","setResult","useEffect","setInterval","Date","getSeconds","handleBtnClick","innerBtn","slice","charAt","length","eval","className","sm","md","xl","xs","style","fontSize","fontWeight","marginRight","icon","faWifi","faBatteryHalf","replaceAll","onClick","faBackspace","Home","Fragment","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.4d3a4dc7.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport \"bootstrap\";\nimport moment from \"moment\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faWifi,\n  faBatteryHalf,\n  faBackspace,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./Main.css\";\n\nfunction Main() {\n  const [time, setTime] = useState(moment().format(\"LT\"));\n  const [operation, setOperation] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n\n  useEffect(() => {\n    setInterval(() => {\n      let seconds: number = new Date().getSeconds();\n      if (seconds === 0) {\n        setTime(moment().format(\"LT\"));\n      }\n    }, 1000);\n  }, []);\n\n  var handleBtnClick = (innerBtn: string): void => {\n    if (innerBtn === \"backspace\") {\n      // Backspace operation\n      setOperation(operation.slice(0, -1));\n    } else if (innerBtn === \"clear\") {\n      // Clear opertation\n      setOperation(\"\");\n    } else if (operation.charAt(operation.length - 1) === \".\") {\n      // If current operation ending with \".\"\n      if (\n        innerBtn === \"=\" ||\n        innerBtn === \"+\" ||\n        innerBtn === \"-\" ||\n        innerBtn === \"*\" ||\n        innerBtn === \"/\"\n      ) {\n      } else {\n        setOperation(operation + innerBtn);\n      }\n    } else if (innerBtn === \"=\") {\n      // Equal button operation\n      if (\n        // Checking that is the existing operation is ending with a operator\n        operation.charAt(operation.length - 1) === \"+\" ||\n        operation.charAt(operation.length - 1) === \"-\" ||\n        operation.charAt(operation.length - 1) === \"*\" ||\n        operation.charAt(operation.length - 1) === \"/\" ||\n        operation.charAt(operation.length - 1) === \"=\"\n      ) {\n        // if it ending with operator nothing to do\n      } else {\n        // Otherwise\n        setOperation(operation + innerBtn);\n        setResult(eval(operation));\n      }\n    } else if (\n      // Checking that is the existing operation is ending with a operator\n      operation.charAt(operation.length - 1) === \"+\" ||\n      operation.charAt(operation.length - 1) === \"-\" ||\n      operation.charAt(operation.length - 1) === \"*\" ||\n      operation.charAt(operation.length - 1) === \"/\"\n    ) {\n      if (\n        // If existing operation ending with operator replacing that operator with new operator\n        innerBtn === \"+\" ||\n        innerBtn === \"-\" ||\n        innerBtn === \"*\" ||\n        innerBtn === \"/\"\n      ) {\n        setOperation(operation.slice(0, -1) + innerBtn);\n      } else if (\n        (operation.charAt(operation.length - 1) === \"*\" &&\n          operation.length === 1) ||\n        (operation.charAt(operation.length - 1) === \"/\" &&\n          operation.length === 1)\n      ) {\n        setOperation(operation.slice(0, -1) + innerBtn);\n      } else {\n        // Checking that operation is ending with equal the replacing the whole operation and starting a new one\n        if (operation.charAt(operation.length - 1) === \"=\") {\n          setOperation(innerBtn);\n        } else {\n          // Otherwise\n          setOperation(operation + innerBtn);\n        }\n      }\n    } else if (\n      operation.charAt(operation.length - 1) === \"=\" &&\n      operation.length === 2\n    ) {\n      // If the operation like this :- [0-9] =\n      setOperation(operation.slice(0, -1) + innerBtn);\n    } else {\n      // Last case here\n      if (operation.charAt(operation.length - 1) === \"=\") {\n        setOperation(innerBtn);\n      } else {\n        setOperation(operation + innerBtn);\n      }\n    }\n  };\n\n  return (\n    <Container>\n      <Row className=\"d-flex align-items-center justify-content-center full-height\">\n        <Col sm=\"8\" md=\"6\" xl=\"4\" xs=\"12\" className=\"calculator\">\n          <div className=\"status-bar\">\n            <div className=\"wifi\">\n              <p\n                style={{\n                  fontSize: \"small\",\n                  fontWeight: \"bold\",\n                  marginRight: \"8px\",\n                }}\n              >\n                AT&T\n              </p>\n              <FontAwesomeIcon icon={faWifi} className=\"wifi\" />\n            </div>\n            <div className=\"time\">\n              <p\n                style={{\n                  fontSize: \"small\",\n                  fontWeight: \"bold\",\n                  marginRight: \"8px\",\n                }}\n              >\n                {time}\n              </p>\n            </div>\n            <div className=\"battery\">\n              <p\n                style={{\n                  fontSize: \"small\",\n                  fontWeight: \"bold\",\n                  marginRight: \"8px\",\n                }}\n              >\n                58%\n              </p>\n              <FontAwesomeIcon icon={faBatteryHalf} className=\"battery\" />\n            </div>\n          </div>\n          <div className=\"calcualtor-body\">\n            <div className=\"results\">\n              <div className=\"operations\">\n                {operation\n                  .replaceAll(\"-\", \" - \")\n                  .replaceAll(\"+\", \" + \")\n                  .replaceAll(\"*\", \" × \")\n                  .replaceAll(\"/\", \" ÷ \")\n                  .replaceAll(\"=\", \" =\")}\n              </div>\n              <div className=\"result\">{result ? result : \" \"}</div>\n            </div>\n            <div className=\"buttons\">\n              <div className=\"btn-row\">\n                <button\n                  className=\"button\"\n                  onClick={() => {\n                    handleBtnClick(\"clear\");\n                  }}\n                >\n                  C\n                </button>\n                <button\n                  className=\"button\"\n                  onClick={() => {\n                    // handleBtnClick(\"%\");\n                  }}\n                >\n                  {/* % */}\n                </button>\n                <button\n                  className=\"button\"\n                  onClick={() => {\n                    handleBtnClick(\"backspace\");\n                  }}\n                >\n                  <FontAwesomeIcon icon={faBackspace} />\n                  {/* ⌫ */}\n                </button>\n                <button\n                  className=\"operator\"\n                  onClick={() => {\n                    handleBtnClick(\"/\");\n                  }}\n                >\n                  ÷\n                </button>\n              </div>\n              <div className=\"btn-row\">\n                <button\n                  className=\"button\"\n                  onClick={() => {\n                    handleBtnClick(\"7\");\n                  }}\n                >\n                  7\n                </button>\n                <button\n                  className=\"button\"\n                  onClick={() => {\n                    handleBtnClick(\"8\");\n                  }}\n                >\n                  8\n                </button>\n                <button\n                  className=\"button\"\n                  onClick={() => {\n                    handleBtnClick(\"9\");\n                  }}\n                >\n                  9\n                </button>\n                <button\n                  className=\"operator\"\n                  onClick={() => {\n                    handleBtnClick(\"*\");\n                  }}\n                >\n                  ×\n                </button>\n              </div>\n              <div className=\"btn-row\">\n                <button\n                  className=\"button\"\n                  onClick={() => {\n                    handleBtnClick(\"4\");\n                  }}\n                >\n                  4\n                </button>\n                <button\n                  className=\"button\"\n                  onClick={() => {\n                    handleBtnClick(\"5\");\n                  }}\n                >\n                  5\n                </button>\n                <button\n                  className=\"button\"\n                  onClick={() => {\n                    handleBtnClick(\"6\");\n                  }}\n                >\n                  6\n                </button>\n                <button\n                  className=\"operator\"\n                  onClick={() => {\n                    handleBtnClick(\"-\");\n                  }}\n                >\n                  -\n                </button>\n              </div>\n              <div className=\"btn-row\">\n                <button\n                  className=\"button\"\n                  onClick={() => {\n                    handleBtnClick(\"1\");\n                  }}\n                >\n                  1\n                </button>\n                <button\n                  className=\"button\"\n                  onClick={() => {\n                    handleBtnClick(\"2\");\n                  }}\n                >\n                  2\n                </button>\n                <button\n                  className=\"button\"\n                  onClick={() => {\n                    handleBtnClick(\"3\");\n                  }}\n                >\n                  3\n                </button>\n                <button\n                  className=\"operator\"\n                  onClick={() => {\n                    handleBtnClick(\"+\");\n                  }}\n                >\n                  +\n                </button>\n              </div>\n              <div className=\"btn-row\">\n                <button\n                  className=\"button\"\n                  onClick={() => {\n                    handleBtnClick(\"0\");\n                  }}\n                >\n                  0\n                </button>\n                <button\n                  className=\"button\"\n                  onClick={() => {\n                    handleBtnClick(\"00\");\n                  }}\n                >\n                  00\n                </button>\n                <button\n                  className=\"button\"\n                  onClick={() => {\n                    handleBtnClick(\".\");\n                  }}\n                >\n                  .\n                </button>\n                <button\n                  className=\"equal\"\n                  onClick={() => {\n                    handleBtnClick(\"=\");\n                  }}\n                >\n                  =\n                </button>\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\nimport Main from \"../components/Main\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Home() {\n  return (\n    <React.Fragment>\n      <Main />\n    </React.Fragment>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}